{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/GitHub/react-playlist-annotator/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect, useContext, createContext } from \"react\";\nimport { FirebaseContext } from \"./FirebaseContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n// Provider component that wraps your app and makes auth object ...\n// ... available to any child component that calls useAuth().\nexport function ProvideAuth(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const auth = useProvideAuth();\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: auth,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 10\n  }, this);\n}\n// Hook for child components to get the auth object ...\n// ... and re-render when it changes.\n_s(ProvideAuth, \"XNU4Jn8u4aVzJknlKOHFJq03xMo=\", false, function () {\n  return [useProvideAuth];\n});\n_c = ProvideAuth;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n// Provider hook that creates auth object and handles state\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nfunction useProvideAuth() {\n  _s3();\n  const [user, setUser] = useState(null);\n  const {\n    firebase\n  } = useContext(FirebaseContext);\n  // Wrap any Firebase methods we want to use making sure ...\n  // ... to save the user to state.\n  const signin = _ref2 => {\n    let {\n      email,\n      password,\n      callback\n    } = _ref2;\n    return firebase.auth().signInWithEmailAndPassword(email, password).then(response => {\n      setUser(response.user);\n      callback();\n      return response.user;\n    });\n  };\n  const signup = _ref3 => {\n    let {\n      email,\n      password,\n      callback\n    } = _ref3;\n    return firebase.auth().createUserWithEmailAndPassword(email, password).then(response => {\n      setUser(response.user);\n      callback();\n      return response.user;\n    });\n  };\n  const signout = () => {\n    return firebase.auth().signOut().then(() => {\n      setUser(false);\n    });\n  };\n  const sendPasswordResetEmail = email => {\n    return firebase.auth().sendPasswordResetEmail(email).then(() => {\n      return true;\n    });\n  };\n  const confirmPasswordReset = (code, password) => {\n    return firebase.auth().confirmPasswordReset(code, password).then(() => {\n      return true;\n    });\n  };\n  // Subscribe to user on mount\n  // Because this sets state in the callback it will cause any ...\n  // ... component that utilizes this hook to re-render with the ...\n  // ... latest auth object.\n  useEffect(() => {\n    const unsubscribe = firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser(false);\n      }\n    });\n    // Cleanup subscription on unmount\n    return () => unsubscribe();\n  }, [firebase]);\n  // Return the user object and auth methods\n  return {\n    user,\n    signin,\n    signup,\n    signout,\n    sendPasswordResetEmail,\n    confirmPasswordReset\n  };\n}\n_s3(useProvideAuth, \"1dw65uYu43V1/lHVY3snxktON9M=\");\nvar _c;\n$RefreshReg$(_c, \"ProvideAuth\");","map":{"version":3,"names":["React","useState","useEffect","useContext","createContext","FirebaseContext","AuthContext","ProvideAuth","children","auth","useProvideAuth","useAuth","user","setUser","firebase","signin","email","password","callback","signInWithEmailAndPassword","then","response","signup","createUserWithEmailAndPassword","signout","signOut","sendPasswordResetEmail","confirmPasswordReset","code","unsubscribe","onAuthStateChanged"],"sources":["/Users/user/Documents/GitHub/react-playlist-annotator/src/context/AuthContext.js"],"sourcesContent":["import React, { useState, useEffect, useContext, createContext } from \"react\";\nimport { FirebaseContext } from \"./FirebaseContext\";\n\nconst AuthContext = createContext();\n// Provider component that wraps your app and makes auth object ...\n// ... available to any child component that calls useAuth().\nexport function ProvideAuth({ children }) {\n  const auth = useProvideAuth();\n  return <AuthContext.Provider value={auth}>{children}</AuthContext.Provider>;\n}\n// Hook for child components to get the auth object ...\n// ... and re-render when it changes.\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n// Provider hook that creates auth object and handles state\nfunction useProvideAuth() {\n  const [user, setUser] = useState(null);\n  const {firebase} = useContext(FirebaseContext);\n  // Wrap any Firebase methods we want to use making sure ...\n  // ... to save the user to state.\n  const signin = ({email, password, callback}) => {\n    return firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then((response) => {\n        setUser(response.user);\n        callback();\n        return response.user;\n      });\n  };\n  const signup = ({email, password, callback}) => {\n    return firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then((response) => {\n        setUser(response.user);\n        callback();\n        return response.user;\n      });\n  };\n  const signout = () => {\n    return firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        setUser(false);\n      });\n  };\n  const sendPasswordResetEmail = (email) => {\n    return firebase\n      .auth()\n      .sendPasswordResetEmail(email)\n      .then(() => {\n        return true;\n      });\n  };\n  const confirmPasswordReset = (code, password) => {\n    return firebase\n      .auth()\n      .confirmPasswordReset(code, password)\n      .then(() => {\n        return true;\n      });\n  };\n  // Subscribe to user on mount\n  // Because this sets state in the callback it will cause any ...\n  // ... component that utilizes this hook to re-render with the ...\n  // ... latest auth object.\n  useEffect(() => {\n    const unsubscribe = firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser(false);\n      }\n    });\n    // Cleanup subscription on unmount\n    return () => unsubscribe();\n  }, [firebase]);\n  // Return the user object and auth methods\n  return {\n    user,\n    signin,\n    signup,\n    signout,\n    sendPasswordResetEmail,\n    confirmPasswordReset,\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}